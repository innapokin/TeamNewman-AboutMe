{
	"info": {
		"_postman_id": "b81cd961-511d-4f3f-8c53-69b761bb002f",
		"name": "PetstoreCollection",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "25901259"
	},
	"item": [
		{
			"name": "{{baseUrl}}/v2/swagger.json",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"var jsonData = pm.response.json();\r",
							"console.log(jsonData)\r",
							"console.log(jsonData.schemes)\r",
							"console.log(jsonData.schemes[0])\r",
							"\r",
							"\r",
							"pm.test(\"Status code name has OK\", function () {\r",
							"    pm.response.to.have.status(\"OK\");\r",
							"});\r",
							"pm.test(\"Body matches string\", function () {\r",
							"    pm.expect(pm.response.text()).to.include(\"tags\");\r",
							"});\r",
							"pm.test(\"Body matches string\", function () {\r",
							"    pm.expect(pm.response.text()).to.include(\"https\");\r",
							"});\r",
							"//pm.test(\"Confirm that the total result is 2\", function () {\r",
							" //   pm.expect(jsonData.schemes).to.eql(\"2\");\r",
							"//});\r",
							"pm.test(\"Body is correct\", function () {\r",
							"    pm.response.to.have.body(jsonData);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}",
					"host": [
						"{{baseUrl}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "{{baseUrlTestify}}/v2/swagger.json",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"var jsonData = pm.response.json();\r",
							"console.log(jsonData)\r",
							"console.log(jsonData.schemes)\r",
							"console.log(jsonData.schemes[0])\r",
							"\r",
							"\r",
							"pm.test(\"Status code name has OK\", function () {\r",
							"    pm.response.to.have.status(\"OK\");\r",
							"});\r",
							"pm.test(\"Body matches string\", function () {\r",
							"    pm.expect(pm.response.text()).to.include(\"pet\");\r",
							"});\r",
							"pm.test(\"Body matches string\", function () {\r",
							"    pm.expect(pm.response.text()).to.include(\"https\");\r",
							"});\r",
							"//pm.test(\"Confirm that the total result is 2\", function () {\r",
							" //   pm.expect(jsonData.schemes).to.eql(\"2\");\r",
							"//});\r",
							"pm.test(\"Body is correct\", function () {\r",
							"    pm.response.to.have.body(jsonData);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseUrlTestify}}/v2/swagger.json?baseUrlTestify={{baseUrl}}",
					"host": [
						"{{baseUrlTestify}}"
					],
					"path": [
						"v2",
						"swagger.json"
					],
					"query": [
						{
							"key": "baseUrlTestify",
							"value": "{{baseUrl}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "{{baseUrl}}/swagger.json",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"var jsonData = pm.response.json();\r",
							"console.log(jsonData)\r",
							"console.log(jsonData.schemes)\r",
							"console.log(jsonData.schemes[0])\r",
							"\r",
							"\r",
							"pm.test(\"Status code name has OK\", function () {\r",
							"    pm.response.to.have.status(\"OK\");\r",
							"});\r",
							"\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/v2/swagger.json?baseUrl=https://petstore.swagger.io&schemes&tags",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"v2",
						"swagger.json"
					],
					"query": [
						{
							"key": "baseUrl",
							"value": "https://petstore.swagger.io"
						},
						{
							"key": "schemes",
							"value": null
						},
						{
							"key": "tags",
							"value": null
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "{{baseUrl}}/swagger.json/tags",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"\r",
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"var jsonData = pm.response.json();\r",
							"console.log(jsonData)\r",
							"\r",
							"pm.test(\"Status code name has OK\", function () {\r",
							"    pm.response.to.have.status(\"OK\");\r",
							"});\r",
							"\r",
							"\r",
							"\r",
							"\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/v2/swagger.json?tags={{baseUrl}}",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"v2",
						"swagger.json"
					],
					"query": [
						{
							"key": "tags",
							"value": "{{baseUrl}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "{{baseUrl}}/swagger.json/info",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var jsonData = pm.response.json();\r",
							"console.log(jsonData)\r",
							"console.log(jsonData.info)\r",
							"\r",
							"\r",
							"\r",
							"\r",
							"pm.environment.set(\"info\", \"jsonData.info\");"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/v2/swagger.json?info={{baseUrl}}",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"v2",
						"swagger.json"
					],
					"query": [
						{
							"key": "info",
							"value": "{{baseUrl}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "{{baseUrl}}/swagger.json/schemes",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var jsonData = pm.response.json();\r",
							"console.log(jsonData)\r",
							"console.log(jsonData.schemes[0])\r",
							"\r",
							"\r",
							"\r",
							"\r",
							"pm.environment.set(\"schemes\", \"jsonData.schemes[0]\");"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/v2/swagger.json?schemes={{baseUrl}}",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"v2",
						"swagger.json"
					],
					"query": [
						{
							"key": "schemes",
							"value": "{{baseUrl}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "{{baseUrlTestify}}/swagger.json/tags",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"\r",
							"\r",
							" \r",
							"\r",
							"    pm.test(\"Status code is 200\", function () {\r",
							"        pm.response.to.have.status(200);\r",
							"\r",
							"var jsonData = pm.response.json();\r",
							"\r",
							"console.log(jsonData)\r",
							"\r",
							"console.log(jsonData.tags)\r",
							"\r",
							"\r",
							"\r",
							"\r",
							"pm.collectionVariables.get(\"jsonData.tags\");\r",
							"\r",
							"    });\r",
							"\r",
							"pm.environment.set(\"tags\", \"jsonData.tags[0].name\");\r",
							"\r",
							"pm.environment.set(\"tags\", \"jsonData.tags[1].description\");"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseUrlTestify}}/v2/swagger.json?tags={{baseUrl}}",
					"host": [
						"{{baseUrlTestify}}"
					],
					"path": [
						"v2",
						"swagger.json"
					],
					"query": [
						{
							"key": "tags",
							"value": "{{baseUrl}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "New Request",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "https://petstore.swagger.io/#/store/placeOrder",
					"protocol": "https",
					"host": [
						"petstore",
						"swagger",
						"io"
					],
					"path": [
						""
					],
					"hash": "/store/placeOrder"
				}
			},
			"response": []
		},
		{
			"name": "petId",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "getPetyId",
						"value": "",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"id\": 0,\r\n  \"category\": {\r\n    \"id\": 0,\r\n    \"name\": \"string\"\r\n  },\r\n  \"name\": \"doggie\",\r\n  \"photoUrls\": [\r\n    \"string\"\r\n  ],\r\n  \"tags\": [\r\n    {\r\n      \"id\": 0,\r\n      \"name\": \"string\"\r\n    }\r\n  ],\r\n  \"status\": \"available\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrlTestify}}/?getPetById=https://petstore.swagger.io#/pet/getPetById",
					"host": [
						"{{baseUrlTestify}}"
					],
					"path": [
						""
					],
					"query": [
						{
							"key": "getPetById",
							"value": "https://petstore.swagger.io"
						}
					],
					"hash": "/pet/getPetById"
				}
			},
			"response": []
		}
	]
}